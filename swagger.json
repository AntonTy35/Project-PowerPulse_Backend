{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.0",
    "title": "PowerPulse API",
    "description": "API documentation for Power Pulse Server",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json", "multipart/form-data"],
  "servers": [
    {
      "url": "https://powerpulserver.onrender.com"
    },
    {
      "url": "http://localhost:8080"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },    
    {
      "name": "Products",
      "description": "Products endpoints"
    },
    {
      "name": "Exercises",
      "description": "Exercises endpoints"
    },
    {
      "name": "Diary",
      "description": "Diary endpoints"
    },
    {
      "name": "Statistics",
      "description": "Statistics endpoints"
    }
  ],
  "paths": {
    "/api/auth/signup": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignupRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful registration",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignupResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Conflict (provided email already exists)",
            "content": {}
          }
        }
      }
    },
    "/api/auth/signin": {
      "post": {
        "tags": ["Auth"],
        "summary": "User signin",
        "parameters": [],
        "requestBody": {
          "description": "Signin's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SigninRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful signin",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SigninResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid credentials)",
            "content": {}
          }
        }
      }
    },
    "/api/auth/current": {
      "get": {
        "tags": ["Auth"],
        "summary": "Get current user",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SigninResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (invalid token)",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/api/auth/params": {
      "patch": {
        "tags": ["Auth"],
        "summary": "Update user information",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Updated user information",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ParamsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User information updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParamsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body or ID)"
          },
          "401": {
            "description": "Unauthorized (invalid token)"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/auth/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "User logout",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "204": {
            "description": "Successful logout",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Successful user's logout"
                    }
                  }
                },
                "example": {
                  "message": "You have logout successful"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (invalid token)"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },


    "/api/products/categories": {
      "get": {
        "tags": ["Products"],
        "summary": "Get all categories products",
        "parameters": [],
        "security": [{ "Bearer": [] }],        
        "responses": {
          "201": {
            "description": "Successful creation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoriesResponse"
                },
                "example": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized (invalid token)"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
      
    },    
    "/api/products/{allOnFilter}": {
      "get": {
        "tags": ["Products"],
        "summary": "Get all products",
        "parameters": [],
        "security": [{ "Bearer": [] }],        
        "responses": {
          "201": {
            "description": "Successful creation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponse"
                },
                "example": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized (invalid token)"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
      
    },
    "/api/exercises/{filter}": {
      "get": {
        "tags": ["Exercises"],
        "summary": "Get exercises",
        "parameters": [],
        "security": [{ "Bearer": [] }],        
        "responses": {
          "201": {
            "description": "Successful creation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExercisesResponse"
                },
                "example": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized (invalid token)"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
      
    },
    "/api/exercises/{filter}/:bodyPart": {
      "get": {
        "tags": ["Exercises"],
        "summary": "Get categories exercises",
        "parameters": [],
        "security": [{ "Bearer": [] }],        
        "responses": {
          "201": {
            "description": "Successful creation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExercisesResponse"
                },
                "example": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized (invalid token)"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
      
    },
    "/api/diary/{date}": {
      "get": {
        "tags": ["Diary"],
        "summary": "Get diary by date",
        "parameters": [],
        "security": [{ "Bearer": [] }],        
        "responses": {
          "201": {
            "description": "Successful creation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiaryResponse"
                },
                "example": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized (invalid token)"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
      
    },
    "/api/diary/products": {
      "post": {
        "tags": ["Diary"],
        "summary": "User diary product",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Diary object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiaryProductRequest"
              },
              "example": {}
            }
          }
        }
      },
      "responses": {
        "201": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiaryProductResponse"
              },
              "example": {

              }
            }
          }
        },
        "400": {
          "description": "Bad request (invalid request body)"
        },
        "409": {
          "description": "Conflict (Email already in use)"
        }
      }
    },
    "/api/diary/products/{id}": {
      "delete": {
        "tags": ["Diary"],
        "summary": "Delete user diary product",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Diary object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiaryProductRequest"
              },
              "example": {}
            }
          }
        }
      },
      "responses": {
        "201": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiaryProductResponse"
              },
              "example": {

              }
            }
          }
        },
        "400": {
          "description": "Bad request (invalid request body)"
        },
        "409": {
          "description": "Conflict (Email already in use)"
        }
      }
    },
    "/api/diary/exercises": {
      "post": {
        "tags": ["Diary"],
        "summary": "User diary exercises",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Diary object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiaryExercisesRequest"
              },
              "example": {}
            }
          }
        }
      },
      "responses": {
        "201": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiaryExercisesResponse"
              },
              "example": {

              }
            }
          }
        },
        "400": {
          "description": "Bad request (invalid request body)"
        },
        "409": {
          "description": "Conflict (Email already in use)"
        }
      }
    },
    "/api/diary/exercises/{id}": {
      "delete": {
        "tags": ["Diary"],
        "summary": "Delete user diary exercises",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Diary object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiaryExercisesRequest"
              },
              "example": {}
            }
          }
        }
      },
      "responses": {
        "201": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiaryExercisesResponse"
              },
              "example": {

              }
            }
          }
        },
        "400": {
          "description": "Bad request (invalid request body)"
        },
        "409": {
          "description": "Conflict (Email already in use)"
        }
      }
    }
  },

  "components": {    
    "schemas": {      
      "SignupRequest": {        
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Power Pulse"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "example": "powerpulse@goit.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwe123456"
          }
        }
      },
      "SignupResponse": {
        "type": "object",
        "properties": {          
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "User's name",
                "example": "Power Pulse"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "example": "powerpulse@goit.com"
              }              
            }
          },
          "token": {
            "type": "string",
            "description": "JWT token for authentication",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1YWFmYWRhMmU1MjJiMzhhNWYwNTAyNyIsImlhdCI6MTcwNTcwNDE1NCwiZXhwIjoxNzA4Mjk2MTU0fQ.cK5qQO3gknGhFx0EXtrko7GVY0304uOqjsOH2WTOOoM"
          }
        }     
      },
      "SigninRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {          
          "email": {
            "type": "string",
            "description": "User's email",
            "example": "powerpulse@goit.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwe123456"
          }
        }
      },
      "SigninResponse": {        
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {              
              "name": {
                "type": "string",
                "description": "User's name"
              },
              "email": {
                "type": "string",
                "description": "User's email"
              },
              "blood": {
                "type": "number",
                "description": "User's blood type",
                "enum": ["1", "2", "3", "4"]
              },
              "sex": {
                "type": "string",
                "description": "User's gender",
                "enum": ["male", "female"]
              },              
              "height": {
                "type": "number",
                "description": "User's height"
              },
              "currentWeight": {
                "type": "number",
                "description": "User's current weight"
              },
              "desiredWeight": {
                "type": "number",
                "description": "User's desired weight"
              },
              "levelActivity": {
                "type": "number",
                "description": "User's level activity",
                "enum": ["1", "2", "3", "4", "5"]
              },
              "avatarURL": {
                "type": "string",
                "description": "User's avatar URL"
              }
            }
          },
          "token": {
            "type": "string",
            "description": "JWT token for authentication"
          }
        },
        "example": {
          "user": {
            "name": "Power Pulse",
            "email": "powerpulse@goit.com",
            "blood": 1,
            "sex": "male",
            "height": 0,
            "currentWeight": 0,
            "desiredWeight": 0,
            "levelActivity": 1,
            "avatarURL": "//www.gravatar.com/avatar/2539b2169b228256128de51b7960d32c"
          },
          "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1YWFmYWRhMmU1MjJiMzhhNWYwNTAyNyIsImlhdCI6MTcwNTcxNDE5NCwiZXhwIjoxNzA4MzA2MTk0fQ.8zpaoGrvQtustURtEStObpcAzaW_T9EH0HfEVpc_ql8"
        }
      },
      "ParamsRequest": {
        "type": "object",
        "required": ["name", "email", "blood","sex", "height", "currentWeight", "desiredWeight", "levelActivity", "birthday"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Power Pulse"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "example": "powerpulse@goit.com"
          },
          "blood": {
            "type": "number",
            "description": "User's blood type",
            "enum": ["1", "2", "3", "4"],
            "example": 1
          },
          "sex": {
            "type": "string",
            "description": "User's gender",
            "enum": ["male", "female"],
            "example": "male"
          },
          "height": {
            "type": "number",
            "description": "User's height minimum 150(cm)",
            "example": 150
          },
          "currentWeight": {
            "type": "number",
            "description": "User's current weight minimum 35(kg)",
            "example": 35
          },
          "desiredWeight": {
            "type": "number",
            "description": "User's desired weight minimum 35(kg)",
            "example": 35
          },
          "levelActivity": {
            "type": "number",
            "description": "User's level activity",
            "enum": ["1", "2", "3", "4", "5"],
            "example": 1
          },
          "birthday": {
            "type": "string",
            "description": "Must be older than 18 years",
            "example": "01/20/2001 (mm/dd/yyyy)"
          }

        }
      },
      "ParamsResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": { 
              "name": {
                "type": "string",
                "description": "User's name",
                "example": "Power Pulse"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "example": "powerpulse@goit.com"
              },
              "blood": {
                "type": "number",
                "description": "User's blood type",
                "enum": ["1", "2", "3", "4"],
                "example": 1
              },
              "sex": {
                "type": "string",
                "description": "User's gender",
                "enum": ["male", "female"],
                "example": "male"
              },
              "height": {
                "type": "number",
                "description": "User's height minimum 150(cm)",
                "example": 175
              },
              "currentWeight": {
                "type": "number",
                "description": "User's current weight minimum 35(kg)",
                "example": 85
              },
              "desiredWeight": {
                "type": "number",
                "description": "User's desired weight minimum 35(kg)",
                "example": 80
              },
              "levelActivity": {
                "type": "number",
                "description": "User's level activity",
                "enum": ["1", "2", "3", "4", "5"],
                "example": 1
              },
              "birthday": {
                "type": "string",
                "description": "Must be older than 18 years (mm/dd/yyyy)",
                "example": "01/20/2001"
              },
              "avatarURL": {
                "type": "string",
                "description": "User's avatar URL",
                "example":"//www.gravatar.com/avatar/2539b2169b228256128de51b7960d32c"
              }
            }
          },
          "bmr":{
            "type": "number",
            "description": "User's BMR",
            "example": "2141"
          }
        }
      }    
  },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
