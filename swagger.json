{
  "openapi": "3.1.0",
  "info": {
    "title": "PowerPulse API",
    "description": "API documentation for Power Pulse Server",
    "version": "1.0.0",
    "license": {
      "name": "PowerPulse by Project Group 09",
      "url": "https://github.com/NikNas1405/PowerPulse"
    }
  },
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json", "multipart/form-data"],
  "servers": [
    {
      "url": "https://powerpulserver.onrender.com"
    },
    {
      "url": "http://localhost:8080"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },    
    {
      "name": "Products",
      "description": "Products endpoints"
    },
    {
      "name": "Exercises",
      "description": "Exercises endpoints"
    },
    {
      "name": "Diary",
      "description": "Diary endpoints"
    },
    {
      "name": "Statistics",
      "description": "Statistics endpoints"
    }
  ],
  "paths": {
    "/api/auth/signup": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "security": [],
        "requestBody": {
          "description": "Registration object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignupRequest"
              },
              "example": {}
            }
          }
        }
      },
      "responses": {
        "201": {
          "description": "Successful registration",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignupResponse"
              },
              "example": {

              }
            }
          }
        },
        "400": {
          "description": "Bad request (invalid request body)"
        },
        "409": {
          "description": "Conflict (Email already in use)"
        }
      }
    },
    "api/auth/verify/{verificationToken}": {
      "get": {
        "tags": ["Auth"],
        "summary": "Verify email with token",
        "parameters": [
          {
            "in": "path",
            "name": "verificationToken",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Email verification successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerifyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid token)"
          },
          "401": {
            "description": "Unauthorized (invalid token)"
          }
        }
      }
    },
    "/api/auth/signin": {
      "post": {
        "tags": ["Auth"],
        "summary": "User signin",
        "parameters": [],

        "requestBody": {
          "description": "Signin's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SigninRequest"
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful signin",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SigninResponse"
                },
                "example": {}
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)"
          },
          "401": {
            "description": "Unauthorized (invalid credentials)"
          }
        }
      }
    },
    "/api/auth/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "User logout",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string",
            "description": "Bearer Token"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "204": {
            "description": "Successful logout",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Successful user's logout"
                    }
                  }
                },
                "example": {
                  "message": "You have logout successful"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (invalid token)"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/auth/current": {
      "get": {
        "tags": ["Auth"],
        "summary": "Get current user",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string",
            "description": "Bearer Token"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentResponse"
                },
                "example": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized (invalid token)"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/auth/update":{},
    "/api/user/products/categories": {
      "get": {
        "tags": ["Products"],
        "summary": "Get all categories products",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string",
            "description": "Bearer Token"
          }
        ],
        "security": [{ "Bearer": [] }],        
        "responses": {
          "201": {
            "description": "Successful creation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoriesResponse"
                },
                "example": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized (invalid token)"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
      
    },    
    "/api/user/products/{allOnFilter}": {
      "get": {
        "tags": ["Products"],
        "summary": "Get all products",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string",
            "description": "Bearer Token"
          }
        ],
        "security": [{ "Bearer": [] }],        
        "responses": {
          "201": {
            "description": "Successful creation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponse"
                },
                "example": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized (invalid token)"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
      
    },
    "/api/user/exercises/{filter}": {
      "get": {
        "tags": ["Exercises"],
        "summary": "Get exercises",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string",
            "description": "Bearer Token"
          }
        ],
        "security": [{ "Bearer": [] }],        
        "responses": {
          "201": {
            "description": "Successful creation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExercisesResponse"
                },
                "example": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized (invalid token)"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
      
    }
    
    
  },

  "components": {
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {      
      "SignupRequest": {},
      "VerifyResponse": {
        "type": "object",
        "title": "VerifyResponse",
        "properties": {
          "message": {
            "type": "string",
            "description": "Message about successful confirmation of email"
          }
        }
      },
      "SignupResponse": {},
      "SigninRequest": {},
      "SigninResponse": {},
      "CurrentResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "User's id"
          },
          "name": {
            "type": "string",
            "description": "User's name"
          },
          "email": {
            "type": "string",
            "description": "User's email"
          },
          "password": {
            "type": "string",
            "description": "User's password"
          },          
          "height": {
            "type": "number",
            "description": "User's height"
          },
          "currentWeight": {
            "type": "number",
            "description": "User's current weight"
          },
          "desiredWeight": {
            "type": "number",
            "description": "User's desired weight"
          },
          "token": {
            "type": "string",
            "description": "User's token"
          },
          "activity": {
            "type": "number",
            "enum": ["1", "2", "3", "4", "5"],
            "description": "User's activity level"
          },
          "BMR": {
            "type": "number",
            "description": "User's BMR"
          },
          "rateWater": {
            "type": "number",
            "description": "User's rate water"
          },
          "protein": {
            "type": "number",
            "description": "User's protein"
          },
          "fat": {
            "type": "number",
            "description": "User's fat"
          },
          "carbs": {
            "type": "number",
            "description": "User's carbs"
          },
          "avatarUrl": {
            "type": "string",
            "description": "URL to user's avatar"
          },
          "verify": {
            "type": "boolean",
            "description": "User's verify email"
          },
          "verificationToken": {
            "type": "string",
            "description": "User's verificationToken"
          },
          "confirmationOfVerification": {
            "type": "number",
            "description": "User's confirmationOfVerification"
          },
          "createdAt": {
            "type": "string",
            "description": "User's create date"
          },
          "updatedAt": {
            "type": "string",
            "description": "User's update date"
          }
        }
      },
      "UpdateRequest": {},
      "UpdateResponse": {},
      "ProductResponse": {},
      "CategoriesResponse": {},
      "ProductsResponse": {},
      "ExercisesResponse": {}
    }
  }
}
